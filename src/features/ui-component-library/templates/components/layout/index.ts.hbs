// Layout Components for {{projectName}} UI Library
// Cross-platform layout primitives

{{#if_eq componentLibrary "shadcn"}}
// shadcn/ui based layout components
import { cn } from "../../lib/utils"
import { cva, type VariantProps } from "class-variance-authority"

// Container Component
const containerVariants = cva(
  "w-full mx-auto px-4",
  {
    variants: {
      size: {
        sm: "max-w-screen-sm",
        md: "max-w-screen-md", 
        lg: "max-w-screen-lg",
        xl: "max-w-screen-xl",
        "2xl": "max-w-screen-2xl",
        full: "max-w-full"
      },
    },
    defaultVariants: {
      size: "lg",
    },
  }
)

export interface ContainerProps 
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof containerVariants> {}

export const Container = ({ className, size, ...props }: ContainerProps) => {
  return (
    <div
      className={cn(containerVariants({ size }), className)}
      {...props}
    />
  )
}

// Stack Component - Vertical layout
const stackVariants = cva(
  "flex flex-col",
  {
    variants: {
      spacing: {
        none: "gap-0",
        sm: "gap-2",
        md: "gap-4",
        lg: "gap-6",
        xl: "gap-8"
      },
      align: {
        start: "items-start",
        center: "items-center",
        end: "items-end",
        stretch: "items-stretch"
      }
    },
    defaultVariants: {
      spacing: "md",
      align: "stretch"
    }
  }
)

export interface StackProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof stackVariants> {}

export const Stack = ({ className, spacing, align, ...props }: StackProps) => {
  return (
    <div
      className={cn(stackVariants({ spacing, align }), className)}
      {...props}
    />
  )
}

// Grid Component
const gridVariants = cva(
  "grid",
  {
    variants: {
      cols: {
        1: "grid-cols-1",
        2: "grid-cols-2",
        3: "grid-cols-3",
        4: "grid-cols-4",
        6: "grid-cols-6",
        12: "grid-cols-12"
      },
      gap: {
        none: "gap-0",
        sm: "gap-2",
        md: "gap-4",
        lg: "gap-6",
        xl: "gap-8"
      }
    },
    defaultVariants: {
      cols: 1,
      gap: "md"
    }
  }
)

export interface GridProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof gridVariants> {}

export const Grid = ({ className, cols, gap, ...props }: GridProps) => {
  return (
    <div
      className={cn(gridVariants({ cols, gap }), className)}
      {...props}
    />
  )
}

{{else}}
// TODO: Implement layout components for {{componentLibrary}}
// TODO: Add Container, Stack, Grid, and other layout primitives
// TODO: Ensure components work across platforms
{{/if}}

// TODO: Add more layout components:
// - Flex component with direction and alignment props
// - Divider/Separator component  
// - Spacer component for flexible spacing
// - Center component for centering content
// - AspectRatio component for maintaining ratios

export * from './Container'
export * from './Stack' 
export * from './Grid'